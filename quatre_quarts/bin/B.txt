(*https://ilyasergey.net/YSC2229/week-09-dynamic-programming.html*) 

let knapsack_max_price n m items =
  let rec solver i j =
    if i < 0 || j <= 0 then 0
    else
      let wn, pn = items.(i) in
      if wn > j then solver (i - 1) j
      else max (solver (i - 1) j) (pn + solver (i - 1) (j - wn))
  in solver (m - 1) n

let () =
  let n, m = Scanf.scanf "%d %d\n" (fun a b -> a, b) in
  if m <= 0 || m > 10000 || n <= 0 || n > 10000 || m > n then
    failwith "Os valores de m e n devem estar no intervalo 0 < m, n <= 10000, e m <= n."
  else
    let items = Array.init m (fun _ ->
      let weight, price = Scanf.scanf "%d %d\n" (fun a b -> a, b) in
      if weight > n then failwith "Peso excedido"
      else (weight, price))
    in
    let max_price = knapsack_max_price n m items in
    print_string (string_of_int max_price ^ "\n")


